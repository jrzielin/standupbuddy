openapi: 3.0.0
info:
  title: Standup Buddy API
  description: API for keeping track of standup meeting updates.
  version: 1.0.0
servers:
  - url: https://standup-buddy.herokuapp.com/api
paths:
  /register:
    post:
      summary: Create a new account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: kl1jh24ljk12h4
                confirm_password:
                  type: string
                  example: kl1jh24ljk12h4
      responses:
        '201':
          description: New user successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login:
    post:
      summary: Login to Standup Buddy and retrieve Bearer JWT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: kl1jh24ljk12h4
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
                    example: k23jh4kj23hf3
  /teams:
    get:
      summary: Returns a list of teams.
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          description: Narrow results by searching for the name of a team.
      responses:
        '200':
          description: A JSON array of teams.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  teams:
                    type: array
                    $ref: '#/components/schemas/Team'
    post:
      summary: 'Create a new team.'
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Positive Pals'
      responses:
        '201':
          description: A new team was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    $ref: '#/components/schemas/Team'
  /teams/{id}:
    get:
      summary: 'Returns a team object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Team ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A team object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    $ref: '#/components/schemas/Team'
    put:
      summary: 'Updates a team object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Team ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Amazon
      responses:
        '200':
          description: Team object updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    $ref: '#/components/schemas/Team'
    delete:
      summary: 'Deletes a team object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Team ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team object deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /items:
    get:
      summary: Returns a list of items.
      security:
        - bearerAuth: []
      parameters:
        - name: item_date
          in: query
          description: Max date to step back 48 hours
        - name: search
          in: query
          description: Filter results containing search.
      responses:
        '200':
          description: A JSON array of items
          content:
            application/json:
              schema:
                type: object
                properties: 
                  items:
                    type: array
                    $ref: '#/components/schemas/Item'
    post:
      summary: 'Create a new item.'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: A new item was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/Item'
  /items/{id}:
    get:
      summary: 'Returns an item object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An item object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/Item'
    put:
      summary: 'Updates an item object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item object updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/Item'
    delete:
      summary: 'Deletes an item object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item object deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string 
                    example: Successfully deleted item
  /users:
    get:
      summary: Returns a list of users.
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          description: Narrow results by searching for the name of a user.
      responses:
        '200':
          description: A JSON array of users.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  users:
                    type: array
                    $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: 'Returns a user object by id.'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Team:
      properties:
        id:
          type: integer
        name:
          type: string
          example: Standup Buddy
        owner_id:
          type: integer
        created_at:
          type: string
          example: 2020-01-01T00:00:00Z
    Item:
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
          example: Migrated backend
        description:
          type: string
          example: Migrated backend from Google Cloud to AWS
        item_date:
          type: string
          example: 2020-01-01T00:00:00Z
        completed:
          type: boolean
          example: false
        created_at:
          type: string
          example: 2020-01-01T00:00:00Z
        team_id:
          type: integer
    User:
      properties:
        id:
          type: integer
        email:
          type: string
          example: johndoe@example.com
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        created_at:
          type: string
          example: 2020-01-01T00:00:00Z